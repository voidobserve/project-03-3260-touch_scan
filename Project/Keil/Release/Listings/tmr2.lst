C51 COMPILER V9.60.7.0   TMR2                                                              11/20/2024 15:06:12 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE TMR2
OBJECT MODULE PLACED IN .\Release\Objects\tmr2.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\Hardware\tmr2.c LARGE OPTIMIZE(8,SIZE) BROWSE INTVECTOR(0X000C) IN
                    -CDIR(..\..\Libraries\Include;..\..\User;..\..\User\lib;..\..\Hardware) INTERVAL(3) DEBUG OBJECTEXTEND PRINT(.\Release\Li
                    -stings\tmr2.lst) OBJECT(.\Release\Objects\tmr2.obj)

line level    source

   1          // 定时器TMR2的驱动源文件
   2          #include "tmr2.h"
   3          
   4          // 定时器定时周期 (单位:Hz)
   5          // 周期值 = 系统时钟 / 定时器分频 / 频率 - 1
   6          #define TMR2_PERIOD (SYSCLK / 128 / 10000 - 1) // 10000Hz,100us
   7          
   8          volatile u32 tmr2_cnt = 0; // 定时器TMR2的计数值（每次在中断服务函数中会加一）
   9          
  10          /**
  11           * @brief 配置定时器TMR2，配置完成后，定时器默认关闭
  12           */
  13          void tmr2_config(void)
  14          {
  15   1          __SetIRQnIP(TMR2_IRQn, TMR2_IQn_CFG); // 设置中断优先级
  16   1          __DisableIRQ(TMR2_IRQn);              // 禁用中断
  17   1          IE_EA = 1;                            // 打开总中断
  18   1      
  19   1          // 清除TMR2的计数值
  20   1          TMR2_CNTL = 0;
  21   1          TMR2_CNTH = 0;
  22   1      
  23   1          TMR2_CONL &= ~TMR_PRESCALE_SEL(0x07); // 清除TMR2的预分频配置寄存器
  24   1          TMR2_CONL |= TMR_PRESCALE_SEL(0x07);  // 定时器预分频
  25   1          TMR2_CONL &= ~TMR_MODE_SEL(0x03);     // 清除TMR2的模式配置寄存器
  26   1          TMR2_CONL |= TMR_MODE_SEL(0x01);      // 配置TMR2的模式为计数器模式，最后对系统时钟
             -的脉冲进行计数
  27   1      
  28   1          TMR2_CONH &= ~TMR_PRD_PND(0x01); // 清除TMR2的计数标志位，表示未完成计数
  29   1          TMR2_CONH |= TMR_PRD_IRQ_EN(1);  // 使能TMR2的计数中断
  30   1      
  31   1          // 配置TMR2的计数周期
  32   1          TMR2_PRH = TMR_PERIOD_VAL_H((TMR2_PERIOD >> 8) & 0xFF); // 周期值
  33   1          TMR2_PRL = TMR_PERIOD_VAL_L((TMR2_PERIOD >> 0) & 0xFF);
  34   1      
  35   1          TMR2_CONL &= ~(TMR_SOURCE_SEL(0x07)); // 清除TMR2的时钟源配置寄存器
  36   1          TMR2_CONL |= TMR_SOURCE_SEL(0x05);    // 配置TMR2的时钟源，不用任何时钟
  37   1      }
  38          
  39          /**
  40           * @brief 开启定时器TMR2，开始计时
  41           */
  42          void tmr2_enable(void)
  43          {
  44   1          // 重新给TMR2配置时钟
  45   1          TMR2_CONL &= ~(TMR_SOURCE_SEL(0x07)); // 清除定时器的时钟源配置寄存器
  46   1          TMR2_CONL |= TMR_SOURCE_SEL(0x06);    // 配置定时器的时钟源，使用系统时钟
  47   1      
  48   1          __EnableIRQ(TMR2_IRQn); // 使能中断
  49   1          IE_EA = 1;              // 打开总中断
  50   1      }
  51          
  52          /**
C51 COMPILER V9.60.7.0   TMR2                                                              11/20/2024 15:06:12 PAGE 2   

  53           * @brief 关闭定时器，清空计数值
  54           */
  55          void tmr2_disable(void)
  56          {
  57   1          // 不给定时器提供时钟，让它停止计数
  58   1          TMR2_CONL &= ~(TMR_SOURCE_SEL(0x07)); // 清除定时器的时钟源配置寄存器
  59   1          TMR2_CONL |= TMR_SOURCE_SEL(0x05);    // 配置定时器的时钟源，不用任何时钟
  60   1      
  61   1          // 清除定时器的计数值
  62   1          TMR2_CNTL = 0;
  63   1          TMR2_CNTH = 0;
  64   1      
  65   1          __DisableIRQ(TMR2_IRQn); // 关闭中断（不使能中断）
  66   1      }
  67          
  68          // TMR2中断服务函数
  69          void TIMR2_IRQHandler(void) interrupt TMR2_IRQn
  70          {
  71   1          // 进入中断设置IP，不可删除
  72   1          __IRQnIPnPush(TMR2_IRQn);
  73   1          // ---------------- 用户函数处理 -------------------
  74   1          // 周期中断
  75   1          if (TMR2_CONH & TMR_PRD_PND(0x1))
  76   1          {
  77   2              TMR2_CONH |= TMR_PRD_PND(0x1); // 清除pending
  78   2              tmr2_cnt++;
  79   2          }
  80   1      
  81   1          // 退出中断设置IP，不可删除
  82   1          __IRQnIPnPop(TMR2_IRQn);
  83   1      }
  84          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    188    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      4    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
